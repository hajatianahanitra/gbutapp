var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var gravatar = require('gravatar');
var mod = require('config/models');
var MongoClient = require('mongodb').MongoClient, assert = require('assert');
var url = 'mongodb://mptdn:mptdn@ds027719.mlab.com:27719/parcautobdd';	

exports.sinscrire = function(email,password,callback) {
		MongoClient.connect(url, function(err, db) {
				var x = email;
				if(!(x.indexOf("@")<1 || x.lastIndexOf(".")<x.indexOf("@")+2 || x.lastIndexOf(".")+2>=x.length)){
					//if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {
						var temp =rand(160, 36);
						var newpass = temp + password;
						var token = crypto.createHash('sha512').update(email +rand).digest("hex");
						var hashed_password = crypto.createHash('sha512').update(password).digest("hex");
						var cursor = db.collection("users").find({email:x , password:hashed_password});
						cursor.toArray(function(err, docs) {
							len = docs.length;
							console.log("taille "+docs.length);
							if(len == 0){
								 db.collection("users").insert({email: x, password:hashed_password},function(err){
									callback("true");
								});
								}else{
									callback("false");

								}
								db.close();
						});
				//	}
				}
				console.log("fin");
			});	
			
	}

