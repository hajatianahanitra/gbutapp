var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var gravatar = require('gravatar');
var typeutilisateur = require('config/models');
var user = require('config/models');
var MongoClient = require('mongodb').MongoClient, assert = require('assert');
var url = 'mongodb://mptdn:mptdn@ds027719.mlab.com:27719/parcautobdd';	

exports.listetype = function(callback) {
	typeutilisateur.find({},function(err,types){
	callback(types);
});
}
exports.login = function(email,password,callback) {
	MongoClient.connect(url, function(err, db) {
				var x = email;
				//if(!(x.indexOf("@")<1 || x.lastIndexOf(".")<x.indexOf("@")+2 || x.lastIndexOf(".")+2>=x.length)){
				//if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {
				var hashed_password = crypto.createHash('sha512').update(password).digest("hex");
				var cursor = db.collection("users").find({email:x , password:hashed_password});
				cursor.toArray(function(err, docs) {
					len = docs.length;
					console.log("taille "+docs.length);
					if(len == 0){
						callback("User does not exist");
						}else{
							callback(docs);
						}
						db.close();
				});
				});	
}

